# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
# serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: 4f47a49863b1

[temperature_sensor Chamber_Thermistor]
sensor_type: Generic 3950
sensor_pin: EBBCan:PA2

[adxl345]
cs_pin: EBBCan:PB12
spi_software_sclk_pin: EBBCan:PB10
spi_software_mosi_pin: EBBCan:PB11
spi_software_miso_pin: EBBCan:PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 100, 100, 20
accel_chip: adxl345

[extruder]
step_pin: EBBCan:PD0
dir_pin: EBBCan:PD1
enable_pin: !EBBCan:PD2
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200
rotation_distance: 21.63637590503434
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan:PA3
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: -100
max_temp: 290
pressure_advance: 0.0325
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 5

# sensor_type:MAX31865
# sensor_pin: EBBCan: PA4
# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan:PA15
run_current: 0.650
interpolate: false
sense_resistor: 0.110
stealthchop_threshold: 0

# [tmc2240 extruder]
# cs_pin: EBBCan: PA15
# spi_software_sclk_pin: EBBCan: PB10
# spi_software_mosi_pin: EBBCan: PB11
# spi_software_miso_pin: EBBCan: PB2
# driver_TPFD: 0
# run_current: 0.650
# stealthchop_threshold: 999999

[fan]
pin: EBBCan:PA1

[heater_fan hotend_fan]
pin: EBBCan:PA0
heater: extruder
heater_temp: 50.0
max_power: 1.0
kick_start_time: 0.5
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

#[heater_fan 4W_FAN0]
#pin: EBBCan:PB14
#tachometer_pin: EBBCan: PB15
#tachometer_ppr: 1

[neopixel sb_leds]
pin: EBBCan:PD3
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#

#[bltouch]
#sensor_pin: ^EBBCan: PB8
#control_pin: EBBCan: PB9

## NPN and PNP proximity switch types can be set by jumper
[probe]
pin: ~EBBCan:PB5
x_offset: 0
y_offset: 0.0
#z_offset: 0
speed: 10.0
samples: 5
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 5
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#[output_pin PB5]
#pin: EBBCan:PB5

#[output_pin PB7]
#pin: EBBCan:PB7

#[output_pin PB6]
#pin: EBBCan:PB6

# [gcode_macro BED_MESH_CALIBRATE]
# rename_existing: BED_MESH_CALIBRATE_BASE
# variable_probing:False
# gcode:
#  SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probing VALUE=True
#  BED_MESH_CALIBRATE_BASE
#  SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probing VALUE=False

[gcode_macro G28]
rename_existing: G0028
variable_homing:False
gcode:
 SET_GCODE_VARIABLE MACRO=G28 VARIABLE=homing VALUE=True
 G0028
 SET_GCODE_VARIABLE MACRO=G28 VARIABLE=homing VALUE=False
